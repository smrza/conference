// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract conferenceToken is ERC20, Ownable{

    constructor() ERC20("Conference token", "CF"){}

    uint256 MAX_SUPPLY = 100000;
    uint256 PRICE_PER_TOKEN = 0.001 ether;

    function mint(uint256 amount) external payable{
        require(msg.value == amount * PRICE_PER_TOKEN, "insufficient payment");
        require(totalSupply() + amount <= MAX_SUPPLY, "not enough tokens left to mint");
        _mint(msg.sender, amount);
    }

    function withdrawEth() external onlyOwner{
        require(address(this).balance > 0, "nothing to withdraw");
        payable(msg.sender).transfer(address(this).balance);
    }
}
